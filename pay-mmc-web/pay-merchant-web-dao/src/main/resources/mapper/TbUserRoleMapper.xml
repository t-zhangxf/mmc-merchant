<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.merchant.web.mapper.TbUserRoleMapper">
    <resultMap id="BaseResultMap" type="com.merchant.web.entity.TbUserRole">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="user_no" property="userNo" jdbcType="VARCHAR"/>
        <result column="merc_id" property="mercId" jdbcType="VARCHAR"/>
        <result column="role_id" property="roleId" jdbcType="INTEGER"/>
        <result column="is_deleted" property="isDeleted" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, user_no, merc_id, role_id, is_deleted, create_time, update_time
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from tb_user_role
        where id = #{id,jdbcType=INTEGER}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_user_role
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.merchant.web.entity.TbUserRole">
    insert into tb_user_role (id, user_no, merc_id, 
      role_id, is_deleted, create_time, 
      update_time)
    values (#{id,jdbcType=INTEGER}, #{userNo,jdbcType=VARCHAR}, #{mercId,jdbcType=VARCHAR}, 
      #{roleId,jdbcType=INTEGER}, #{isDeleted,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
    <insert id="insertSelective" parameterType="com.merchant.web.entity.TbUserRole">
        insert into tb_user_role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userNo != null">
                user_no,
            </if>
            <if test="mercId != null">
                merc_id,
            </if>
            <if test="roleId != null">
                role_id,
            </if>
            <if test="isDeleted != null">
                is_deleted,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="userNo != null">
                #{userNo,jdbcType=VARCHAR},
            </if>
            <if test="mercId != null">
                #{mercId,jdbcType=VARCHAR},
            </if>
            <if test="roleId != null">
                #{roleId,jdbcType=INTEGER},
            </if>
            <if test="isDeleted != null">
                #{isDeleted,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.merchant.web.entity.TbUserRole">
        update tb_user_role
        <set>
            <if test="userNo != null">
                user_no = #{userNo,jdbcType=VARCHAR},
            </if>
            <if test="mercId != null">
                merc_id = #{mercId,jdbcType=VARCHAR},
            </if>
            <if test="roleId != null">
                role_id = #{roleId,jdbcType=INTEGER},
            </if>
            <if test="isDeleted != null">
                is_deleted = #{isDeleted,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.merchant.web.entity.TbUserRole">
    update tb_user_role
    set user_no = #{userNo,jdbcType=VARCHAR},
      merc_id = #{mercId,jdbcType=VARCHAR},
      role_id = #{roleId,jdbcType=INTEGER},
      is_deleted = #{isDeleted,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <resultMap id="BaseUserRoleTypeResultMap" type="com.merchant.web.Do.UserRoleDo">
        <result column="type" property="type" jdbcType="INTEGER"/>
    </resultMap>
    <select id="selectUserRoleByUser" resultMap="BaseUserRoleTypeResultMap" parameterType="com.merchant.web.vo.UserRoleVo">
        SELECT DISTINCT  tr.type FROM tb_role tr,tb_user_role ur
        WHERE 1=1 AND tr.is_deleted=0 AND ur.is_deleted=0 AND tr.id=ur.role_id
        <if test="userNo != null">
            AND user_no = #{userNo,jdbcType=VARCHAR}
        </if>
        <if test="mercId != null">
            AND merc_id =#{mercId,jdbcType=VARCHAR}
        </if>
        <if test="roleId != null">
            AND role_id = #{roleId,jdbcType=INTEGER}
        </if>
        ORDER BY ur.create_time ASC
    </select>
</mapper>